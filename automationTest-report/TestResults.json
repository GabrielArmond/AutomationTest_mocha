{
  "stats": {
    "suites": 3,
    "tests": 5,
    "passes": 2,
    "pending": 0,
    "failures": 3,
    "start": "2021-10-19T16:00:36.013Z",
    "end": "2021-10-19T16:00:39.287Z",
    "duration": 3274,
    "testsRegistered": 5,
    "passPercent": 40,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "dfffe496-fff3-4fad-a9b6-5cca7b3a99d0",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "fcbb49e9-c5bb-4203-be20-7f81b77f5320",
          "title": "add another a todo tests",
          "fullFile": "C:\\Users\\Farme\\Automation_test_headless_mocha\\test\\paramTest.js",
          "file": "\\test\\paramTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "successfully adds a todo for browser Chrome, 95.0, Windows 10",
              "fullTitle": "add another a todo tests successfully adds a todo for browser Chrome, 95.0, Windows 10",
              "timedOut": null,
              "duration": 5,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "browsers.browser = browser\nbrowsers.bVersion = bVersion\nbrowsers.os = os\ndriver = new Builder().forBrowser('chrome').forBrowser('firefox').build()\n//naviagete to our application\nawait driver.get('https://lambdatest.github.io/sample-todo-app/')\n//add a search\nawait driver\n  .findElement(By.id('sampletodotext'))\n  .sendKeys('Learn Selenium', Key.RETURN)\n//assert\nlet todoText = await driver\n  .findElement(By.xpath('//li[last()]'))\n  .getText()\n  .then(function (value) {\n    return value\n  })\n//assert using chai should\ntodoText.should.equal('Learn Selenium')\nawait driver.quit()",
              "err": {
                "message": "Error: The geckodriver.exe executable could not be found on the current PATH. Please download the latest version from https://github.com/mozilla/geckodriver/releases/ and ensure it can be found on your PATH.",
                "estack": "Error: The geckodriver.exe executable could not be found on the current PATH. Please download the latest version from https://github.com/mozilla/geckodriver/releases/ and ensure it can be found on your PATH.\n    at findGeckoDriver (node_modules\\selenium-webdriver\\firefox.js:458:11)\n    at new ServiceBuilder (node_modules\\selenium-webdriver\\firefox.js:551:22)\n    at Function.createSession (node_modules\\selenium-webdriver\\firefox.js:607:21)\n    at createDriver (node_modules\\selenium-webdriver\\index.js:148:33)\n    at Builder.build (node_modules\\selenium-webdriver\\index.js:721:16)\n    at Context.<anonymous> (test\\paramTest.js:25:73)",
                "diff": null
              },
              "uuid": "c4e1ca35-dc03-4486-adb0-04cd406895be",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "successfully adds a todo for browser Firefox, 93.0, Windows 10",
              "fullTitle": "add another a todo tests successfully adds a todo for browser Firefox, 93.0, Windows 10",
              "timedOut": null,
              "duration": 5,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "browsers.browser = browser\nbrowsers.bVersion = bVersion\nbrowsers.os = os\ndriver = new Builder().forBrowser('chrome').forBrowser('firefox').build()\n//naviagete to our application\nawait driver.get('https://lambdatest.github.io/sample-todo-app/')\n//add a search\nawait driver\n  .findElement(By.id('sampletodotext'))\n  .sendKeys('Learn Selenium', Key.RETURN)\n//assert\nlet todoText = await driver\n  .findElement(By.xpath('//li[last()]'))\n  .getText()\n  .then(function (value) {\n    return value\n  })\n//assert using chai should\ntodoText.should.equal('Learn Selenium')\nawait driver.quit()",
              "err": {
                "message": "Error: The geckodriver.exe executable could not be found on the current PATH. Please download the latest version from https://github.com/mozilla/geckodriver/releases/ and ensure it can be found on your PATH.",
                "estack": "Error: The geckodriver.exe executable could not be found on the current PATH. Please download the latest version from https://github.com/mozilla/geckodriver/releases/ and ensure it can be found on your PATH.\n    at findGeckoDriver (node_modules\\selenium-webdriver\\firefox.js:458:11)\n    at new ServiceBuilder (node_modules\\selenium-webdriver\\firefox.js:551:22)\n    at Function.createSession (node_modules\\selenium-webdriver\\firefox.js:607:21)\n    at createDriver (node_modules\\selenium-webdriver\\index.js:148:33)\n    at Builder.build (node_modules\\selenium-webdriver\\index.js:721:16)\n    at Context.<anonymous> (test\\paramTest.js:25:73)",
                "diff": null
              },
              "uuid": "7b345d2f-782c-4633-9cfb-1ca5c1e25193",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "c4e1ca35-dc03-4486-adb0-04cd406895be",
            "7b345d2f-782c-4633-9cfb-1ca5c1e25193"
          ],
          "pending": [],
          "skipped": [],
          "duration": 10,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        },
        {
          "uuid": "6d8e1f45-eb56-4544-9259-223994ea4aa4",
          "title": "add todo tests",
          "fullFile": "C:\\Users\\Farme\\Automation_test_headless_mocha\\test\\firstTest.js",
          "file": "\\test\\firstTest.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"add todo tests\"",
              "fullTitle": "add todo tests \"before each\" hook in \"add todo tests\"",
              "timedOut": null,
              "duration": 5,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": null,
              "context": null,
              "code": "driver = new Builder().forBrowser('chrome').build()",
              "err": {},
              "uuid": "8f0ff02d-0382-418a-9c66-25a2e1181eda",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"add todo tests\"",
              "fullTitle": "add todo tests \"after each\" hook in \"add todo tests\"",
              "timedOut": null,
              "duration": 95,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": null,
              "context": null,
              "code": "await driver.quit()",
              "err": {},
              "uuid": "4376ad76-a9f7-451c-9a60-8b9d897c520c",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "successfully add todo to application",
              "fullTitle": "add todo tests successfully add todo to application",
              "timedOut": null,
              "duration": 1475,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//naviagete to our application\nawait driver.get('https://lambdatest.github.io/sample-todo-app/')\n//add a search\nawait driver\n  .findElement(By.id('sampletodotext'))\n  .sendKeys('Learn Selenium', Key.RETURN)\n//assert\nlet todoText = await driver\n  .findElement(By.xpath('//li[last()]'))\n  .getText()\n  .then(function (value) {\n    return value\n  })\n//assert using chai should\ntodoText.should.equal('Learn Selenium')",
              "err": {},
              "uuid": "c65ac286-0eb2-4d54-add0-b5ef2a588fdc",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c65ac286-0eb2-4d54-add0-b5ef2a588fdc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1475,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        },
        {
          "uuid": "d3a97f1e-733d-482d-8338-945c59b0c03b",
          "title": "add another a todo tests",
          "fullFile": "C:\\Users\\Farme\\Automation_test_headless_mocha\\test\\secondTest.js",
          "file": "\\test\\secondTest.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"add another a todo tests\"",
              "fullTitle": "add another a todo tests \"before each\" hook in \"add another a todo tests\"",
              "timedOut": null,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": null,
              "context": null,
              "code": "driver = new Builder().forBrowser('chrome').build()",
              "err": {},
              "uuid": "3c71660b-71f1-44e6-a79d-d27c3e5cbf7c",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"add another a todo tests\"",
              "fullTitle": "add another a todo tests \"after each\" hook in \"add another a todo tests\"",
              "timedOut": null,
              "duration": 72,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": null,
              "context": null,
              "code": "await driver.quit()",
              "err": {},
              "uuid": "ccfbd074-cbfe-4b5e-9582-95e4c0b8734f",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "successfully adds another todo to application",
              "fullTitle": "add another a todo tests successfully adds another todo to application",
              "timedOut": null,
              "duration": 1478,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//naviagete to our application\nawait driver.get('https://lambdatest.github.io/sample-todo-app/')\n//add a search\nawait driver\n  .findElement(By.id('sampletodotext'))\n  .sendKeys('Learn Selenium', Key.RETURN)\n//assert\nlet todoText = await driver\n  .findElement(By.xpath('//li[last()]'))\n  .getText()\n  .then(function (value) {\n    return value\n  })\n//assert using chai should\ntodoText.should.equal('Learn Selenium')",
              "err": {},
              "uuid": "d293b785-8135-4d87-bef0-c7cc59a8f006",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Adding a new test for reporting",
              "fullTitle": "add another a todo tests Adding a new test for reporting",
              "timedOut": null,
              "duration": 1184,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "//naviagete to our application\nawait driver.get('https://lambdatest.github.io/sample-todo-app/')\n//add a search\nawait driver\n  .findElement(By.id('sampletodotext'))\n  .sendKeys('Learn Selenium', Key.RETURN)\n//assert\nlet todoText = await driver\n  .findElement(By.xpath('//li[last()]'))\n  .getText()\n  .then(function (value) {\n    return value\n  })\n//assert using chai should\ntodoText.should.equal('Learn nothing')",
              "err": {
                "message": "AssertionError: expected 'Learn Selenium' to equal 'Learn nothing'",
                "estack": "AssertionError: expected 'Learn Selenium' to equal 'Learn nothing'\n    at Context.<anonymous> (test\\secondTest.js:60:21)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                "diff": "- Learn Selenium\n+ Learn nothing\n"
              },
              "uuid": "271024be-1c03-4231-acfa-572fb9569be1",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d293b785-8135-4d87-bef0-c7cc59a8f006"
          ],
          "failures": [
            "271024be-1c03-4231-acfa-572fb9569be1"
          ],
          "pending": [],
          "skipped": [],
          "duration": 2662,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "9.1.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "TestResults",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.3.1"
    },
    "marge": {
      "options": {
        "reportDir": "C:\\Users\\Farme\\Automation_test_headless_mocha\\automationTest-report",
        "reportFilename": "TestResults"
      },
      "version": "5.2.0"
    }
  }
}